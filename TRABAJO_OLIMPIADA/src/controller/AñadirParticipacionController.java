package controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;

import javafx.scene.control.ToggleGroup;
import javafx.stage.Stage;
import javafx.stage.Window;
import model.Deporte;
import model.Deportista;
import model.Equipos;
import model.Evento;
import model.Participacion;
import javafx.scene.control.TextField;

import java.net.URL;
import java.util.ResourceBundle;

import dao.DeportistaDao;
import dao.EquipoDao;
import dao.EventoDao;
import dao.ParticipacionDao;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ComboBox;

import javafx.scene.control.RadioButton;

public class AñadirParticipacionController implements Initializable{
	@FXML
	private Label lblNumero2;
	@FXML
	private Label lblNumero6;
	@FXML
	private Label lblTitulo;
	@FXML
	private Button btnAceptar;
	@FXML
	private Button btnCancelar;
	@FXML
	private ComboBox comboDeportista;
	@FXML
	private ComboBox comboEvento;
	@FXML
	private RadioButton rbOro;
	@FXML
	private ToggleGroup medalla;
	@FXML
	private RadioButton rbPlata;
	@FXML
	private RadioButton rbBronze;
	@FXML
	private RadioButton rbNada;
	@FXML
	private ComboBox comboEquipo;
	@FXML
	private TextField txtEdad;
	ParticipacionDao pd;
	EventoDao evd;
	EquipoDao eqd;
	DeportistaDao dd;
	
	private int idAntiguoDeportista;
	private int idAntiguoEvento;
	

	// Event Listener on Button[#btnAceptar].onAction
	@FXML
	public void aceptar(ActionEvent event) {
		String med;
		//Saber que medalla a conseguido
		if(rbOro.isSelected()) {
			med=rbOro.getText();
		}else {
			if(rbPlata.isSelected()) {
				med=rbPlata.getText();
			}else {
				if(rbBronze.isSelected()) {
					med=rbBronze.getText();
				}else {
					med="";
				}
			}
		}
		//Buscar el id deportista
		Deportista dep=(Deportista) comboDeportista.getSelectionModel().getSelectedItem();
		int id_deportista=dd.bucarId(dep);
		//Buscar el id Equipo
		Equipos equip=(Equipos) comboEquipo.getSelectionModel().getSelectedItem();
		int id_equipo=eqd.bucarId(equip);
		//Buscar el id Evento
		Evento ev=(Evento) comboEvento.getSelectionModel().getSelectedItem();
		String nomEv=ev.getNom_Evento();
		String anioEv=ev.getNom_Olimpiada();
		int id_evento=evd.sacarId(nomEv,anioEv);
		//sacar los otros datos
		int edad=Integer.parseInt(txtEdad.getText());
		if (lblTitulo.getText().equals("Añadir Participacion")) {
			if(comprobar().length()==0){
				pd.anadirParticipacion(edad, med, id_deportista, id_evento, id_equipo);
				info(btnAceptar.getScene().getWindow());
				Stage stage = (Stage) btnAceptar.getScene().getWindow();
				stage.close();
			}else {
				error(btnAceptar.getScene().getWindow());
			}
			
		}else {
			if(comprobar().length()==0){
				pd.modificarParticipacion(edad, med, id_deportista, id_evento, id_equipo, this.idAntiguoEvento, this.idAntiguoDeportista);
				info(btnAceptar.getScene().getWindow());
				Stage stage = (Stage) btnAceptar.getScene().getWindow();
				stage.close();
			}else{
				error(btnAceptar.getScene().getWindow());
			}
				
			
		}
		
		Stage stage = (Stage) btnAceptar.getScene().getWindow();
		stage.close();
		
	}
	// Event Listener on Button[#btnCancelar].onAction
	@FXML
	public void cerrar(ActionEvent event) {
		// TODO Autogenerated
		Stage stage = (Stage) btnCancelar.getScene().getWindow();
		stage.close();
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		pd=new ParticipacionDao();
		evd=new EventoDao();
		eqd=new EquipoDao();
		dd=new DeportistaDao();
		comboDeportista.setItems(dd.sacarDeportistas());
		comboEvento.setItems(evd.cargarEvento());
		comboEquipo.setItems(eqd.sacarEquipos());
		lblTitulo.setText("Añadir Participacion");

		comboDeportista.getSelectionModel().select(0);
		comboEvento.getSelectionModel().select(0);
		comboEquipo.getSelectionModel().select(0);
		rbNada.setSelected(true);

	}
	public RadioButton getRbOro() {
		return rbOro;
	}
	public RadioButton getRbPlata() {
		return rbPlata;
	}
	public RadioButton getRbBronze() {
		return rbBronze;
	}
	public RadioButton getRbNada() {
		return rbNada;
	}
	public TextField getTxtEdad() {
		return txtEdad;
	}
	public void setTxtEdad(TextField txtEdad) {
		this.txtEdad = txtEdad;
	}
	public Label getLblTitulo() {
		return lblTitulo;
	}
	public ComboBox getComboDeportista() {
		return comboDeportista;
	}
	public ComboBox getComboEvento() {
		return comboEvento;
	}
	public ComboBox getComboEquipo() {
		return comboEquipo;
	}
	public void setIdAntiguoDeportista(Deportista idAntiguoDeportista) {
		this.idAntiguoDeportista = dd.bucarId(idAntiguoDeportista);
	}
	public void setIdAntiguoEvento(Evento idAntiguoEvento) {
		this.idAntiguoEvento = evd.sacarId(idAntiguoEvento.getNom_Evento(),String.valueOf(idAntiguoEvento.getNom_Olimpiada()));
	}
	public String comprobar() {
		String fallo="";
		if(txtEdad.getText().length()==0) {
			fallo+="\n El campo de la edad tiene que tener contenido";
		}
		try {
			int i=Integer.parseInt(txtEdad.getText());
		} catch (NumberFormatException e) {
			// TODO: handle exception
			fallo+="\n El campo de la edad tiene que tener numeros";
		}
		
		return fallo;
	}
	public void error (Window win) {
		Alert alert;
		String texto=comprobar();
		alert = new Alert(Alert.AlertType.ERROR);
		alert.setContentText(texto);
		alert.setHeaderText(null);
		alert.initOwner(win);
		alert.setTitle("ERROR");
		alert.showAndWait();
	}
	public void info(Window win) {
		Alert alert;
		alert = new Alert(Alert.AlertType.INFORMATION);
		alert.setContentText("ACCION HECHA CORRECTAMENTE");
		alert.setHeaderText(null);
		alert.initOwner(win);
		alert.setTitle("INFO");
		alert.showAndWait();
	}
}
