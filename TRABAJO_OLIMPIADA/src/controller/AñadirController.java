package controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import model.Deporte;
import model.Evento;
import model.Olimpiada;

import java.net.URL;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ResourceBundle;

import conexionBD.ConexionDB;
import dao.DeporteDao;
import dao.EventoDao;
import dao.OlimpiadaDao;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

public class AñadirController implements Initializable {

	@FXML
	private Button btnAceptar;

	@FXML
	private Button btnCancelar;

	@FXML
	private ComboBox<Deporte> comboDeporte;

	@FXML
	private ComboBox<Olimpiada> comboOlimpiada;

	@FXML
	private Label lblNumero1;

	@FXML
	private Label lblNumero2;

	@FXML
	private Label lblNumero6;

	@FXML
	private Label lblTitulo;

	@FXML
	private TextField txtNumero1;

	private DeporteDao dp;
	private EventoDao ed;
	private OlimpiadaDao od;
	
	private int id_Olimpiada_Antiguo;
	private String nomAntiguo;
	// Event Listener on Button[#btnAceptar].onAction


	@FXML
	public void aceptar(ActionEvent event) {
		// TODO Autogenerated.
		// CREAR LOS ELEMENTOS

		Deporte dep = comboDeporte.getSelectionModel().getSelectedItem();
		Olimpiada ol = comboOlimpiada.getSelectionModel().getSelectedItem();
		Evento ev = new Evento(txtNumero1.getText(), comboOlimpiada.getSelectionModel().getSelectedItem().getNombre());
		if (lblTitulo.getText().equals("Añadir Evento Olimpico")) {
			// COMPROBAR SI YA EXISTE
			if (ed.cargarEvento().equals(ev)) {

			} else {
				// SACAR IDs
				int id_Deporte = dp.sacarId(dep);

				int id_Olimpiada = od.sacarId(ol);
				// AÑADIR EVENTO
				ed.anadirEvento(ev, id_Olimpiada, id_Deporte);
				// PARA QUE SE CIERRE AL DARLE ACEPTAR
				Stage stage = (Stage) btnAceptar.getScene().getWindow();
				stage.close();
			}
		} else {
			if (ed.cargarEvento().equals(ev)) {

			} else {
				int id_Deporte = dp.sacarId(dep);
				int id_Olimpiada = od.sacarId(ol);
				// MODIFICAR EVENTO
				ed.modificarEvento(ev, id_Olimpiada, id_Deporte, id_Olimpiada_Antiguo,nomAntiguo);
				// PARA QUE SE CIERRE AL DARLE ACEPTAR
				Stage stage = (Stage) btnAceptar.getScene().getWindow();
				stage.close();
			}
			
		}

	}

	public ComboBox<Deporte> getComboDeporte() {
		return comboDeporte;
	}

	public ComboBox<Olimpiada> getComboOlimpiada() {
		return comboOlimpiada;
	}

	// Event Listener on Button[#btnCancelar].onAction
	@FXML
	public void cerrar(ActionEvent event) {
		// TODO Autogenerated
		// PARA QUE SE CIERRE AL DARLE CANCELAR
		Stage stage = (Stage) btnCancelar.getScene().getWindow();
		stage.close();

	}

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		// DECLARAR LOS DAO
		dp = new DeporteDao();
		ed = new EventoDao();
		od = new OlimpiadaDao();
		this.comboDeporte.setItems(dp.sacarDeportes());
		this.comboOlimpiada.setItems(od.sacarOlimpiada());
		if(lblTitulo.getText().equals("Añadir Evento Olimpico")){
			comboDeporte.getSelectionModel().select(0);
			comboOlimpiada.getSelectionModel().select(0);
		}
		

	}


	public void setId_Olimpiada_Antiguo(Olimpiada olimpiada) {
		
		this.id_Olimpiada_Antiguo = od.sacarId(olimpiada);
	}

	public void setLblTitulo(String s) {
		this.lblTitulo.setText(s);
		;
	}

	public TextField getTxtNumero1() {
		return txtNumero1;
	}

	public void setNomAntiguo(String nomAntiguo) {
		this.nomAntiguo = nomAntiguo;
	}

}
