package controller;

import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.TextField;
import javafx.stage.Stage;
import javafx.stage.Window;
import model.Deporte;
import model.Evento;
import model.Olimpiada;

import java.net.URL;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ResourceBundle;

import conexionBD.ConexionDB;
import dao.DeporteDao;
import dao.EventoDao;
import dao.OlimpiadaDao;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

public class AñadirController implements Initializable {

	@FXML
	private Button btnAceptar;

	@FXML
	private Button btnCancelar;

	@FXML
	private ComboBox<Deporte> comboDeporte;

	@FXML
	private ComboBox<Olimpiada> comboOlimpiada;

	@FXML
	private Label lblNumero1;

	@FXML
	private Label lblNumero2;

	@FXML
	private Label lblNumero6;

	@FXML
	private Label lblTitulo;

	@FXML
	private TextField txtNumero1; //NOMBRE EVENTO

	private DeporteDao dp;
	private EventoDao ed;
	private OlimpiadaDao od;
	
	private int id_Olimpiada_Antiguo;
	private String nomAntiguo;
	// Event Listener on Button[#btnAceptar].onAction


	@FXML
	public void aceptar(ActionEvent event) {
		// TODO Autogenerated.
		// CREAR LOS ELEMENTOS

		Deporte dep = comboDeporte.getSelectionModel().getSelectedItem();
		Olimpiada ol = comboOlimpiada.getSelectionModel().getSelectedItem();
		Evento ev = new Evento(txtNumero1.getText(), comboOlimpiada.getSelectionModel().getSelectedItem().getNombre());
		if (lblTitulo.getText().equals("Añadir Evento Olimpico")) {
			// COMPROBAR SI YA EXISTE
			if (ed.cargarEvento().equals(ev)) {

			} else {
				if(comprobar().length()==0) {
					// SACAR IDs
					int id_Deporte = dp.sacarId(dep);

					int id_Olimpiada = od.sacarId(ol);
					// AÑADIR EVENTO
					ed.anadirEvento(ev, id_Olimpiada, id_Deporte);
					// PARA QUE SE CIERRE AL DARLE ACEPTAR
					info(btnAceptar.getScene().getWindow());
					Stage stage = (Stage) btnAceptar.getScene().getWindow();
					stage.close();
					
				}else {
					error(btnAceptar.getScene().getWindow());
				}

			}
		} else {
			if (ed.cargarEvento().equals(ev)) {

			} else {
				if(comprobar().length()==0) {
					int id_Deporte = dp.sacarId(dep);
					int id_Olimpiada = od.sacarId(ol);
					// MODIFICAR EVENTO
					ed.modificarEvento(ev, id_Olimpiada, id_Deporte, id_Olimpiada_Antiguo,nomAntiguo);
					// PARA QUE SE CIERRE AL DARLE ACEPTAR
					info(btnAceptar.getScene().getWindow());
					Stage stage = (Stage) btnAceptar.getScene().getWindow();
					stage.close();
				}else {
					this.error(btnAceptar.getScene().getWindow());
				}
				
			}
			
		}

	}

	public ComboBox<Deporte> getComboDeporte() {
		return comboDeporte;
	}

	public ComboBox<Olimpiada> getComboOlimpiada() {
		return comboOlimpiada;
	}
	public void info(Window win) {
		Alert alert;
		alert = new Alert(Alert.AlertType.INFORMATION);
		alert.setContentText("ACCION HECHA CORRECTAMENTE");
		alert.setHeaderText(null);
		alert.initOwner(win);
		alert.setTitle("INFO");
		alert.showAndWait();
	}
	// Event Listener on Button[#btnCancelar].onAction
	@FXML
	public void cerrar(ActionEvent event) {
		// TODO Autogenerated
		// PARA QUE SE CIERRE AL DARLE CANCELAR
		Stage stage = (Stage) btnCancelar.getScene().getWindow();
		stage.close();

	}

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		// DECLARAR LOS DAO
		dp = new DeporteDao();
		ed = new EventoDao();
		od = new OlimpiadaDao();
		this.comboDeporte.setItems(dp.sacarDeportes());
		this.comboOlimpiada.setItems(od.sacarOlimpiada());
		if(lblTitulo.getText().equals("Añadir Evento Olimpico")){
			comboDeporte.getSelectionModel().select(0);
			comboOlimpiada.getSelectionModel().select(0);
		}
		

	}


	public void setId_Olimpiada_Antiguo(Olimpiada olimpiada) {
		
		this.id_Olimpiada_Antiguo = od.sacarId(olimpiada);
	}

	public void setLblTitulo(String s) {
		this.lblTitulo.setText(s);
		;
	}

	public TextField getTxtNumero1() {
		return txtNumero1;
	}

	public void setNomAntiguo(String nomAntiguo) {
		this.nomAntiguo = nomAntiguo;
	}
	public String comprobar() {
		String fallo="";
		if(txtNumero1.getText().length()==0) {
			fallo+="\n El campo del nombre Evento tiene que tener contenido";
		}
		Evento ev = new Evento(txtNumero1.getText(), comboOlimpiada.getSelectionModel().getSelectedItem().getNombre());
		
		if(ed.cargarEvento().contains(ev)) {
			fallo+="\n Ese Evento ya existe";
		}
		
		
		return fallo;
	}
	public void error (Window win) {
		Alert alert;
		String texto=comprobar();
		alert = new Alert(Alert.AlertType.ERROR);
		alert.setContentText(texto);
		alert.setHeaderText(null);
		alert.initOwner(win);
		alert.setTitle("ERROR");
		alert.showAndWait();
	}
}
