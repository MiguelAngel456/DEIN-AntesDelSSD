package controller;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ButtonType;

import java.io.IOException;
import java.net.URL;
import java.sql.SQLException;
import java.util.Optional;
import java.util.ResourceBundle;

import dao.DeporteDao;
import dao.DeportistaDao;
import dao.EquipoDao;
import dao.OlimpiadaDao;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;

import javafx.scene.control.Label;

import javafx.scene.control.ListView;
import javafx.scene.input.MouseEvent;
import javafx.stage.Modality;
import javafx.stage.Stage;
import javafx.stage.Window;
import model.Deporte;
import model.Deportista;
import model.Equipos;
import model.Evento;
import model.Olimpiada;

public class listaController implements Initializable{
	@FXML
    private Button btnAñadir;

    @FXML
    private Button btnCancelar;

    @FXML
    private Button btnEliminar;

    @FXML
    private Button btnModificar;

    @FXML
    private Label lblTitulo;

    @FXML
    private ListView listObjetos;
    //DAOS
    private OlimpiadaDao olD;
    private EquipoDao eqD;
    @FXML
    void Añadir(ActionEvent event) {
    	if(this.lblTitulo.getText().toLowerCase().equals("olimpiadas")) {
    		FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/AñadirOlimpiada.fxml"));
    		Parent root;
    		try {
				root = loader.load();
				Scene newScene = new Scene(root);
				Stage newStage = new Stage();
				newStage.setResizable(false);
		        newStage.setMaximized(false);
				newScene.getStylesheets().add(getClass().getResource("/css/application.css").toExternalForm());
				AñadirOlimpiadaController control = loader.getController();
				Olimpiada ol=(Olimpiada) listObjetos.getSelectionModel().getSelectedItem();
				newStage.initModality(Modality.APPLICATION_MODAL);
				newStage.setScene(newScene);
				newStage.setTitle("Añadir Olimpiadas");
				newStage.showAndWait();
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
    	}else {
    		
    	}
    }
    @FXML
    void eliminar(ActionEvent event) {
    	if(this.lblTitulo.getText().toLowerCase().equals("olimpiadas")) {
    		try {
    			Alert alert = new Alert(Alert.AlertType.CONFIRMATION);
    			alert.setHeaderText(null);;
    			alert.setTitle("Eliminar Evento");
    			alert.setContentText("Si eliminas esta Olimpiada se eliminara los eventos relacionados y por lo tanto tamibien las participaciones relacionadas a esos eventos\n¿Estas seguro?");
    			Optional<ButtonType> result=alert.showAndWait();
    			if(result.get()==ButtonType.OK) {
    	    		Olimpiada ol=(Olimpiada) listObjetos.getSelectionModel().getSelectedItem();
    	    		olD.eliminarOlimpiada(ol);
    				this.info();
    				this.listObjetos.setItems(olD.sacarOlimpiada());
    			}
    		}catch (SQLException e) {
				this.error(e.getMessage());
			}
    		
    	}
    }

    @FXML
    void modificar(ActionEvent event) {
    	if(listObjetos.getSelectionModel().getSelectedItem()!=null) {
    		if(this.lblTitulo.getText().toLowerCase().equals("olimpiadas")) {
        		FXMLLoader loader = new FXMLLoader(getClass().getResource("/fxml/AñadirOlimpiada.fxml"));
        		Parent root;
        		try {
    				root = loader.load();
    				Scene newScene = new Scene(root);
    				Stage newStage = new Stage();
    				newStage.setResizable(false);
    		        newStage.setMaximized(false);
    				newScene.getStylesheets().add(getClass().getResource("/css/application.css").toExternalForm());
    				AñadirOlimpiadaController control = loader.getController();
    				Olimpiada ol=(Olimpiada) listObjetos.getSelectionModel().getSelectedItem();
    				System.out.println(ol.getTemporada());
    				control.rellenar("Modificar Olimpiada", ol);
    				newStage.initModality(Modality.APPLICATION_MODAL);
    				newStage.setScene(newScene);
    				newStage.setTitle("Gestionar Olimpiadas");
    				newStage.showAndWait();
    			} catch (IOException e) {
    				// TODO Auto-generated catch block
    				e.printStackTrace();
    			}
        		this.listObjetos.setItems(olD.sacarOlimpiada());
    		}else {
    			if(this.lblTitulo.getText().toLowerCase().equals("equipos")) {
    				
    			}
        	}
    		
    		
    		
    		
    		
    		
    		
    		
    		
    		
    		
    		
    	}else {
    		this.error("Selecciona una fila de la lista para modificar");
    	}
    	
    	
    }

	
	@FXML
	public void cancelar(ActionEvent event) {
		// TODO Autogenerated
		Stage stage = (Stage) btnCancelar.getScene().getWindow();
		stage.close();
	}
	public void rellenar(String tipo) {
		if(tipo.toLowerCase().equals("olimpiada")) {
			this.listObjetos.setItems(olD.sacarOlimpiada());
			this.lblTitulo.setText("Olimpiadas");
		}else {
			if(tipo.toLowerCase().equals("equipo")) {
				this.listObjetos.setItems(eqD.sacarEquipos());
				this.lblTitulo.setText("Equipos");
			}
		}
	}
	public void error (String t) {
		Alert alert;
		String texto=t;
		alert = new Alert(Alert.AlertType.ERROR);
		alert.setContentText(texto);
		alert.setHeaderText(null);
		alert.setTitle("ERROR");
		alert.showAndWait();
	}
	public void info() {
		Alert alert;
		alert = new Alert(Alert.AlertType.INFORMATION);
		alert.setContentText("ACCION HECHA CORRECTAMENTE");
		alert.setHeaderText(null);
		alert.setTitle("INFO");
		alert.showAndWait();
	}
	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		olD=new OlimpiadaDao();
		eqD=new EquipoDao();
		
		//this.dd=new DeporteDao();
	}
}
